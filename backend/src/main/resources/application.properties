spring.application.name=marketing-api

# Database Configuration (Configured via Render Environment Variables)
# Estas são as variáveis que você DEVE configurar no painel do Render para o seu serviço de BACKEND:
# DB_URL=postgresql://oimperadordosaber_user:tvfgajav128w60kwhdyij8spzxqyg81l@dpg-d1qf6vvfffes6s73cl90-a/oimperadordosaber
# DB_USERNAME=oimperadordosaber_user
# DB_PASSWORD=tvfgajav128w60kwhdyij8spzxqyg81l
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Server Configuration
server.port=8080
# server.servlet.context-path=/api
# escola_marketing

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.open-in-view=false

# Connection Pool Configuration
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=HikariCP
spring.datasource.hikari.max-lifetime=2000000
spring.datasource.hikari.connection-timeout=30000

# Security Configuration (Configured via Render Environment Variables for production)
# JWT_SECRET=escola-secret-key-2024-marketing-system-jwt-token (ou outro valor seguro)
escola.jwt.secret=${JWT_SECRET}
escola.jwt.expiration=86400000

# CORS Configuration (Configured via Render Environment Variable for frontend URL)
# CORS_ALLOWED_ORIGIN_FRONTEND=https://oimperadordo-saber-3.onrender.com (substitua pela URL real do seu frontend no Render)
# Adicionado localhost para desenvolvimento local, e a variável de ambiente para produção
escola.cors.allowed-origins=${CORS_ALLOWED_ORIGIN_FRONTEND},http://localhost:4200
escola.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
escola.cors.allowed-headers=*

# Logging Configuration
logging.level.com.escola=INFO
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.info.env.enabled=true

# Application Information
info.app.name=Escola Marketing API
info.app.description=Sistema de Marketing para Escola
info.app.version=1.0.0
info.app.encoding=@project.build.sourceEncoding@
info.app.java.version=@java.version@

# Email Configuration (Configured via Render Environment Variables for security)
# MAIL_USERNAME=escola@gmail.com
# MAIL_PASSWORD=app-password (sua senha de aplicativo do Gmail)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Pagination Configuration
escola.pagination.default-size=10
escola.pagination.max-size=100

# Configurações para upload de arquivos
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Diretório para upload das imagens
app.upload.dir=uploads/direcao

# URL base da aplicação (Configured via Render Environment Variable)
# APP_BASE_URL=https://seu-backend-do-render.onrender.com (substitua pela URL real do seu backend no Render)
app.base.url=${APP_BASE_URL}

# Se usando em produção, ajustar conforme necessário:
# app.base.url=https://seudominio.com
